#include<cstdio>
typedef __uint128_t L;typedef unsigned long long ull;const int M=1e7+5;int T,P,maxx,top,n[10005],m[10005],pri[M],phi[M],fac[M],ifac[M];bool zhi[M];struct rush{ull b,m;rush(ull b):b(b),m(ull((L(1)<<64)/b)){}friend inline ull operator%(const ull&a,const rush&mod){ull q=(L(mod.m)*a)>>64;ull r=a-q*mod.b;return r>=mod.b?r-mod.b:r;}}mod(2);signed main(){int i,j,x;scanf("%d%d",&T,&P);phi[1]=fac[1]=ifac[1]=1;mod=rush(ull(P));for(i=1;i<=T;++i){scanf("%d%d",n+i,m+i);maxx=n[i]>maxx? n[i]:maxx;maxx=m[i]>maxx? m[i]:maxx;}for(i=2;i<=maxx;++i){if(!zhi[i])pri[++top]=i,phi[i]=1;for(j=1;j<=top&&(x=i*pri[j])<=M;++j){zhi[x]=true;if(!(i%pri[j])){break;}}phi[i]=i-phi[i];}for(i=2;i<=maxx;++i){if(i^P){fac[i]=1ull*fac[i-1]*i%mod,ifac[i]=1ull*(P-P/i)*ifac[P%i]%mod;}else {fac[i]=fac[i-1],ifac[i]=1;}}for(i=2;i<=maxx;++i)phi[i]=1ull*phi[i-1]*phi[i]%mod,ifac[i]=1ull*ifac[i-1]*ifac[i]%mod;for(i=1;i<=T;++i)printf("%d\n",n[i]-n[i]%P==m[i]-m[i]%P?1ull*fac[n[i]]*ifac[m[i]]%mod*phi[m[i]]%mod:0);}